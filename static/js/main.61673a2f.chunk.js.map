{"version":3,"sources":["components/LoadingComponent.js","components/CardComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","class","Meta","Card","CardComponent","email","phone","website","currentUser","handleDelete","handleEdit","useState","isLiked","setIsLiked","isModalVisible","setIsModalVisible","name","formValues","setFormValues","likeColor","lg","md","sm","xl","xs","span","style","margin","cover","alt","src","username","background","width","height","actions","HeartFilled","onClick","color","EditOutlined","showModal","DeleteFilled","id","title","description","MailOutlined","fontSize","PhoneOutlined","GlobalOutlined","destroyOnClose","visible","onOk","event","onCancel","labelCol","wrapperCol","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","label","placeholder","rules","required","message","defaultValue","onChange","target","value","type","Main","users","setUsers","isLoading","setIsLoading","getUsers","a","fetch","response","json","useEffect","setTimeout","userId","newUsers","index","findIndex","user","splice","newUser","map","usersList","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61673a2f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <div class=\"bounce1\"></div>\r\n      <div class=\"bounce2\"></div>\r\n      <div class=\"bounce3\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import { React, useState } from \"react\";\r\nimport { Form, Input, Modal, Card, Col, Row } from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteFilled,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  GlobalOutlined,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nconst { Meta } = Card;\r\n\r\nconst RenderCardDescription = (email, phone, website) => {\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <p>\r\n            <MailOutlined style={{ fontSize: 18 }} /> {email}{\" \"}\r\n          </p>\r\n        </Col>\r\n        <Col span={24}>\r\n          <p>\r\n            <PhoneOutlined style={{ fontSize: 18 }} /> {phone}\r\n          </p>\r\n        </Col>\r\n        <Col span={24}>\r\n          <p>\r\n            <GlobalOutlined style={{ fontSize: 18 }} /> {website}{\" \"}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\nexport default function CardComponent({ currentUser,handleDelete,handleEdit }) {\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [formValues, setFormValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n  });\r\n  const showModal = (currentUser) => {\r\n    setIsModalVisible(true);\r\n    setFormValues({\r\n      name: currentUser.name,\r\n      email: currentUser.email,\r\n      phone: currentUser.phone,\r\n      website: currentUser.website,\r\n    });\r\n  };\r\n\r\n  const handleOk = (event) => {\r\n    setIsModalVisible(false);\r\n    handleEdit(currentUser.id,formValues)\r\n    // setFormValues({\r\n    //   name: event.target.value,\r\n    //   email: event.target.value,\r\n    //   phone: event.target.value,\r\n    //   website: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const likeColor = isLiked ? \"red\" : \"gray\";\r\n  \r\n  return (\r\n    <>\r\n      <Col key={currentUser.id} lg={8} md={8} sm={24} xl={6} xs={24} span={6}>\r\n        <Card\r\n          style={{ margin: 15 }}\r\n          cover={\r\n            <img\r\n              alt={currentUser.name}\r\n              src={`https://avatars.dicebear.com/v2/avataaars/${currentUser.username}.svg?options[mood][]=happy`}\r\n              style={{\r\n                background: \"#ececec\",\r\n                width: \"100%\",\r\n                height: \"200px\",\r\n              }}\r\n            />\r\n          }\r\n          actions={[\r\n            <HeartFilled\r\n              key=\"heart\"\r\n              onClick={() => setIsLiked(!isLiked)}\r\n              style={{ color: likeColor }}\r\n            />,\r\n            <EditOutlined key=\"edit\" onClick={() => showModal(currentUser)} />,\r\n            <DeleteFilled\r\n              key=\"delete\"\r\n              onClick={() => handleDelete(currentUser.id)}\r\n            />,\r\n          ]}\r\n        >\r\n          <Meta\r\n            title={currentUser.name}\r\n            description={RenderCardDescription(\r\n              currentUser.email,\r\n              currentUser.phone,\r\n              currentUser.website\r\n            )}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        destroyOnClose=\"false\" //Unmounts children on close\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{\r\n            span: 8,\r\n          }}\r\n          wrapperCol={{\r\n            span: 16,\r\n          }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your username!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input defaultValue={formValues.name} onChange={(event) => setFormValues({\r\n                ...formValues,name:event.target.value\r\n            })} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your email!\",\r\n              },\r\n              {\r\n                type:\"email\",\r\n                message:\"Not a valid email\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input defaultValue={formValues.email} onChange={(event) => setFormValues({\r\n                ...formValues,email:event.target.value\r\n            })} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            placeholder=\"Phone\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your phone!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input defaultValue={formValues.phone} onChange={(event) => setFormValues({\r\n                ...formValues,phone:event.target.value\r\n            })}  />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Website\"\r\n            name=\"website\"\r\n            placeholder=\"Website\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your website!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input defaultValue={formValues.website} onChange={(event) => setFormValues({\r\n                ...formValues,website:event.target.value\r\n            })} />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { Row } from \"antd\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\n\r\nfunction Main() {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const getUsers = async () => {\r\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    setUsers(await response.json());\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000);\r\n  }, []); //Dependency list to prevent infinite loop\r\n\r\n  const handleDelete = (userId) => {\r\n    const newUsers = [...users];\r\n    const index = users.findIndex((user) => user.id === userId);\r\n    newUsers.splice(index, 1);\r\n    setUsers(newUsers);\r\n  };\r\n\r\n  const handleEdit = (userId, newUser) => {\r\n    console.log(userId, newUser);\r\n    const newUsers = users.map((user) => {\r\n      if (userId === user.id) {\r\n        user.name = newUser.name;\r\n        user.email = newUser.email;\r\n        user.phone = newUser.phone;\r\n        user.website = newUser.website;\r\n        return user;\r\n      } else {\r\n        return user;\r\n      }\r\n    });\r\n    console.log(newUsers);\r\n    setUsers(newUsers);\r\n  };\r\n\r\n  const usersList = users.map((currentUser) => {\r\n    return (\r\n      <CardComponent\r\n        currentUser={currentUser}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n    );\r\n  });\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Row>{usersList}</Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\nimport Main from \"./components/MainComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}